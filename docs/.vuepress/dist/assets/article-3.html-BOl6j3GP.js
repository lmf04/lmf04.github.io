import{_ as a}from"./yolo-BwXhYhLF.js";import{_ as n,e,g as l,o as i}from"./app-yQRFVPrG.js";const t={};function p(r,s){return i(),e("div",null,s[0]||(s[0]=[l('<p><a href="https://opensource.org/licenses/MIT" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/License-MIT-blue.svg" alt="License: MIT"></a><a href="https://doi.org/XXX" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/arXiv-XXXX.XXXXX-b31b1b.svg" alt="arXiv"></a><br><a href="https://hub.docker.com/r/lmf04/yolov8-biomed" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/Docker Image-lmf04/yolov8--biomed-2496ED?logo=docker" alt="Docker Image"></a><a href="https://colab.research.google.com/github/lmf04/YOLOv8-BioMed" target="_blank" rel="noopener noreferrer"><img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"></a></p><p>基于改进YOLOv8的多任务医学影像分析系统（细胞计数 + 肿瘤检测）</p><h2 id="项目概述" tabindex="-1"><a class="header-anchor" href="#项目概述"><span>项目概述</span></a></h2><p>本平台提供端到端的医学影像分析解决方案，针对CT/DICOM/NIfTI等医学影像格式，实现：</p><ul><li>🩺 <strong>细胞级分析</strong>：显微图像中的细胞检测与精准计数</li><li>🧬 <strong>肿瘤智能诊断</strong>：CT影像中的肿瘤定位与良恶性判别</li><li>🚀 <strong>临床级部署</strong>：开箱即用的Docker容器与REST API服务</li></ul><p><strong>核心创新</strong>：<br> ⚡ 提出 <strong>Cascade-YOLO</strong> 级联架构（EfficientNetV2骨干 + CBAM注意力）<br> 📊 300例临床验证：细胞计数误差&lt;5%，肿瘤诊断AUC达0.92<br> ⏱️ 4倍效率提升：GPU推理速度达83 FPS（RTX 3090）</p><h2 id="技术亮点" tabindex="-1"><a class="header-anchor" href="#技术亮点"><span>技术亮点</span></a></h2><h3 id="模型架构" tabindex="-1"><a class="header-anchor" href="#模型架构"><span>模型架构</span></a></h3><p><img src="'+a+`" alt="Cascade-YOLO Architecture"><em>级联检测流程：1) 全局特征提取 2) 注意力增强 3) 多任务预测头</em></p><h3 id="技术栈" tabindex="-1"><a class="header-anchor" href="#技术栈"><span>技术栈</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token string">&quot;YOLOv8&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;8.1.0&quot;</span><span class="token punctuation">,</span>            <span class="token comment"># 核心检测框架</span></span>
<span class="line"><span class="token string">&quot;EfficientNetV2&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1.3.0&quot;</span><span class="token punctuation">,</span>     <span class="token comment"># 骨干网络</span></span>
<span class="line"><span class="token string">&quot;FastAPI&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;0.109.0&quot;</span><span class="token punctuation">,</span>          <span class="token comment"># REST API服务</span></span>
<span class="line"><span class="token string">&quot;Vue3&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;3.3.4&quot;</span><span class="token punctuation">,</span>               <span class="token comment"># 交互式前端</span></span>
<span class="line"><span class="token string">&quot;DICOM/NIfTI&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;pydicom 2.4.3&quot;</span> <span class="token comment"># 医学影像处理</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构"><span>目录结构</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">.</span>
<span class="line">├── configs/            # 模型配置</span>
<span class="line">│   ├── cascade.yaml    # 级联模型参数</span>
<span class="line">│   └── data_aug.yaml   # 数据增强策略</span>
<span class="line">├── data/               # 数据管理</span>
<span class="line">│   ├── dicom/          # 原始DICOM数据</span>
<span class="line">│   └── preprocessed/   # 预处理后的PNG</span>
<span class="line">├── app/                # 应用服务</span>
<span class="line">│   ├── api/            # FastAPI后端</span>
<span class="line">│   └── webui/          # Vue3前端</span>
<span class="line">├── models/             # 模型定义</span>
<span class="line">│   ├── backbone/       # EfficientNetV2</span>
<span class="line">│   └── attention/      # CBAM模块</span>
<span class="line">└── docker/             # 容器化配置</span>
<span class="line">    ├── Dockerfile.api</span>
<span class="line">    └── Dockerfile.webui</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始"><span>快速开始</span></a></h2><h3 id="环境配置" tabindex="-1"><a class="header-anchor" href="#环境配置"><span>环境配置</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 创建conda环境</span></span>
<span class="line">conda create <span class="token parameter variable">-n</span> biomed <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.10</span></span>
<span class="line">conda activate biomed</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装核心依赖</span></span>
<span class="line">pip <span class="token function">install</span> <span class="token assign-left variable">ultralytics</span><span class="token operator">==</span><span class="token number">8.1</span>.0 <span class="token assign-left variable">fastapi</span><span class="token operator">==</span><span class="token number">0.109</span>.0 <span class="token assign-left variable">pydicom</span><span class="token operator">==</span><span class="token number">2.4</span>.3</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 或使用Docker部署</span></span>
<span class="line"><span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>  <span class="token comment"># 需预先配置docker-compose.yml</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据预处理" tabindex="-1"><a class="header-anchor" href="#数据预处理"><span>数据预处理</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> utils<span class="token punctuation">.</span>dicom_processor <span class="token keyword">import</span> DICOMConverter</span>
<span class="line"></span>
<span class="line"><span class="token comment"># DICOM转PNG并标准化</span></span>
<span class="line">converter <span class="token operator">=</span> DICOMConverter<span class="token punctuation">(</span>input_dir<span class="token operator">=</span><span class="token string">&quot;data/dicom/&quot;</span><span class="token punctuation">,</span> output_dir<span class="token operator">=</span><span class="token string">&quot;data/preprocessed/&quot;</span><span class="token punctuation">)</span></span>
<span class="line">converter<span class="token punctuation">.</span>process_batch<span class="token punctuation">(</span>window_center<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">,</span> window_width<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">)</span>  <span class="token comment"># CT窗宽窗位调节</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="模型训练" tabindex="-1"><a class="header-anchor" href="#模型训练"><span>模型训练</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 细胞计数模型</span></span>
<span class="line">yolo train <span class="token assign-left variable">cfg</span><span class="token operator">=</span>configs/cascade.yaml <span class="token punctuation">\\</span></span>
<span class="line">           <span class="token assign-left variable">data</span><span class="token operator">=</span>configs/cell_count.yaml <span class="token punctuation">\\</span></span>
<span class="line">           <span class="token assign-left variable">imgsz</span><span class="token operator">=</span><span class="token number">640</span> <span class="token punctuation">\\</span></span>
<span class="line">           <span class="token assign-left variable">batch</span><span class="token operator">=</span><span class="token number">32</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 肿瘤检测模型</span></span>
<span class="line">yolo train <span class="token assign-left variable">cfg</span><span class="token operator">=</span>configs/cascade.yaml <span class="token punctuation">\\</span></span>
<span class="line">           <span class="token assign-left variable">data</span><span class="token operator">=</span>configs/tumor_detect.yaml <span class="token punctuation">\\</span></span>
<span class="line">           <span class="token assign-left variable">pretrained</span><span class="token operator">=</span>weights/cell_count.pt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动服务" tabindex="-1"><a class="header-anchor" href="#启动服务"><span>启动服务</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 启动API服务</span></span>
<span class="line">uvicorn app.api.main:app <span class="token parameter variable">--host</span> <span class="token number">0.0</span>.0.0 <span class="token parameter variable">--port</span> <span class="token number">8000</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 启动Web界面</span></span>
<span class="line"><span class="token builtin class-name">cd</span> app/webui <span class="token operator">&amp;&amp;</span> <span class="token function">npm</span> run dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="核心性能" tabindex="-1"><a class="header-anchor" href="#核心性能"><span>核心性能</span></a></h2><table><thead><tr><th>任务类型</th><th>准确率</th><th>速度(FPS)</th><th>硬件配置</th></tr></thead><tbody><tr><td>细胞计数</td><td>95.2%</td><td>83</td><td>RTX 3090, CUDA 11</td></tr><tr><td>肿瘤检测(AUC)</td><td>0.92</td><td>62</td><td>RTX 3090, CUDA 11</td></tr><tr><td>端到端流水线</td><td>-</td><td>28</td><td>Core i9-13900K</td></tr></tbody></table><h2 id="引用" tabindex="-1"><a class="header-anchor" href="#引用"><span>引用</span></a></h2><div class="language-bibtex line-numbers-mode" data-highlighter="prismjs" data-ext="bibtex"><pre><code><span class="line">@article{YourName2024YOLOMed,</span>
<span class="line">  title={Cascade-YOLO: Multi-task Medical Image Analysis System with Hybrid Attention Mechanisms},</span>
<span class="line">  author={Your Name, 陈教授 et al.},</span>
<span class="line">  journal={arXiv preprint},</span>
<span class="line">  year={2024},</span>
<span class="line">  doi={XXX}</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="技术支持" tabindex="-1"><a class="header-anchor" href="#技术支持"><span>技术支持</span></a></h2><p><a href="https://github.com/lmf04/YOLOv8-BioMed/issues" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/github/issues/lmf04/YOLOv8-BioMed" alt="GitHub Issues"></a><br> 技术咨询：李沐风 (lmf04@github)<br> 临床合作：山东大学医学影像中心</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,29)]))}const d=n(t,[["render",p],["__file","article-3.html.vue"]]),m=JSON.parse('{"path":"/research/article-3.html","title":"YOLOv8生物医学影像分析平台开发","lang":"en-US","frontmatter":{"layout":"ResearchPost","archive":true,"date":"2024.02 - 2024.03","sort":3,"category":[1,"独立项目"],"title":"YOLOv8生物医学影像分析平台开发","description":"开发多任务目标检测模型，实现细胞计数与肿瘤判别","teacher":null,"technology":"YOLOv8、OpenCV、FastAPI","progress":null,"method":["级联YOLOv8架构（EfficientNetV2+CBAM注意力机制）","构建DICOM/NIfTI格式预处理流水线","构建交互式识别平台（FastAPI+Vue3 WebUI），Docker容器化部署"],"findings":["细胞计数准确率95.2%，CT肿瘤判别AUC 0.92","完成300例临床样本验证，检测效率提升400%","相关代码开源至GitHub <a href=\\"https://github.com/lmf04/YOLOv8-BioMed\\">仓库链接(https://github.com/lmf04/YOLOv8-BioMed)</a>","研究成果提交至arXiv预印本（DOI:XXX）"],"contribution":null},"headers":[{"level":2,"title":"项目概述","slug":"项目概述","link":"#项目概述","children":[]},{"level":2,"title":"技术亮点","slug":"技术亮点","link":"#技术亮点","children":[{"level":3,"title":"模型架构","slug":"模型架构","link":"#模型架构","children":[]},{"level":3,"title":"技术栈","slug":"技术栈","link":"#技术栈","children":[]}]},{"level":2,"title":"目录结构","slug":"目录结构","link":"#目录结构","children":[]},{"level":2,"title":"快速开始","slug":"快速开始","link":"#快速开始","children":[{"level":3,"title":"环境配置","slug":"环境配置","link":"#环境配置","children":[]},{"level":3,"title":"数据预处理","slug":"数据预处理","link":"#数据预处理","children":[]},{"level":3,"title":"模型训练","slug":"模型训练","link":"#模型训练","children":[]},{"level":3,"title":"启动服务","slug":"启动服务","link":"#启动服务","children":[]}]},{"level":2,"title":"核心性能","slug":"核心性能","link":"#核心性能","children":[]},{"level":2,"title":"引用","slug":"引用","link":"#引用","children":[]},{"level":2,"title":"技术支持","slug":"技术支持","link":"#技术支持","children":[]}],"git":{"updatedTime":1743167802000,"contributors":[{"name":"2935580139@qq.com","username":"2935580139@qq.com","email":"2935580139@qq.com","commits":6,"url":"https://github.com/2935580139@qq.com"}],"changelog":[{"hash":"04bea275b59d142038569bb5b47b26c0875a5b24","time":1743167802000,"email":"2935580139@qq.com","author":"2935580139@qq.com","message":"434"},{"hash":"f98f873676bea0083fac7eecab8041545bc2b607","time":1743165960000,"email":"2935580139@qq.com","author":"2935580139@qq.com","message":"3"},{"hash":"7763b45c3673498908f0e2e9f92b15285d3f11d2","time":1743156666000,"email":"2935580139@qq.com","author":"2935580139@qq.com","message":"23234"},{"hash":"0ff0efa7063aa57d6d2ea7868b1228032657911f","time":1742081682000,"email":"2935580139@qq.com","author":"2935580139@qq.com","message":"123"},{"hash":"571dd2630c73fd3b0f9b3064e8aa1e77f07c1da9","time":1742053757000,"email":"2935580139@qq.com","author":"2935580139@qq.com","message":"2123"},{"hash":"2de90227ea5bda0ed1f22282a8f3f3289e48a111","time":1741848364000,"email":"2935580139@qq.com","author":"2935580139@qq.com","message":"init"}]},"filePathRelative":"research/article-3.md","excerpt":"<!-- # YOLOv8-BioMed: 生物医学影像智能分析平台 -->\\n<p><a href=\\"https://opensource.org/licenses/MIT\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"https://img.shields.io/badge/License-MIT-blue.svg\\" alt=\\"License: MIT\\"></a>\\n<a href=\\"https://doi.org/XXX\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"https://img.shields.io/badge/arXiv-XXXX.XXXXX-b31b1b.svg\\" alt=\\"arXiv\\"></a><br>\\n<a href=\\"https://hub.docker.com/r/lmf04/yolov8-biomed\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"https://img.shields.io/badge/Docker Image-lmf04/yolov8--biomed-2496ED?logo=docker\\" alt=\\"Docker Image\\"></a>\\n<a href=\\"https://colab.research.google.com/github/lmf04/YOLOv8-BioMed\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"https://colab.research.google.com/assets/colab-badge.svg\\" alt=\\"Open In Colab\\"></a></p>"}');export{d as comp,m as data};
